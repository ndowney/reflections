-How did viewing a diff between two versions of a file help you see the bug that was introduced?

Having much od the tet that was idential betwee the files be removed allowed me to more easily spot the difference between files.  Also having content displayed from both files simultaneously on the same terminal was a big help. 

-How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It woud be possible to revert to a recent version that worked, compare to the current version and see where things went wrong.  This is not possible if the old version was deleted.

-What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

I get to choose when to commit something, so if I change something that breaks the code, I dont have to commit until it is fixed and working again.  This avoids having other users check out a version that is broken, and that they may not not knw how to fix.

-Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because this allows files that work together properly to be packaged together.  If each file were treated separately, if ou were to revert to an old version of one file, it might not work with the current versions of the files it interacts with.

-How can you use the commands git log and git diff to view the history of files?

Git log shows you what commits were made and git diff tells me what was changed between commits

-How might using version control make you more confident to make changes that could break something?

Because I know that it will always be possible to return to a working state by checking out an earlier commit.  This is not possible if I do not have version control I would have to remember exactly what changes I made to figure out where things broke.  If the break ws accidental, i may not even be able to figure it out.

-Now that you have your workspace set up, what do you want to try using Git for?

I want to use it to do version control ona small software project that I am making.


